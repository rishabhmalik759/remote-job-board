datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}
model Company{
  id Int @id @default(autoincrement())
  companyName String @unique
  jobPosts JobPost[]
}

model JobPost {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  company    Company?   @relation(fields: [companyId], references: [id])
  companyId  Int?
  position    String
  positionType String
  primaryTag   String
  tags String[]
  jobLocation String
  showCompanyLogo Boolean @default(false)
  emailToCandidates Boolean @default(false)
  getMatches Boolean @default(false)
  highlightPost Boolean @default(false)
  stickForDuration Int
  jobPostDuration Int
  createdOn     DateTime     @default(now())
  invoice Invoice?
  jobDetails JobDetailsState?
}

model Invoice{
  id     Int  @id @default(autoincrement())
  jobPost JobPost @relation(fields:[jobPostId],references:[id])
  jobPostId Int
  companyInvoiceEmail String
  emailListToSendInvoice String
  invoiceAddress String
  invoiceNotesPurchaseOrder String
  payLater Boolean @default(false)
}


model JobDetailsState{
  id     Int  @id @default(autoincrement())
  jobPost JobPost  @relation(fields: [jobPostId],references:  [id])
  jobPostId Int
  companyLogo String
  highlightWithCompanyColor Boolean @default(false)
  minAnnualSalary Int
  maxAnnualSalary Int
  jobDescription JobDescription?
  howToApply  HowToApply?
  applyURL String
  applyEmail  String
}

model JobDescription{
  id     Int  @id @default(autoincrement())
  jobDetails JobDetailsState  @relation(fields: [jobDetailsId],references:  [id])
  jobDetailsId Int
  text  String
  html String
}

model HowToApply{
  id     Int  @id @default(autoincrement())
  jobDetails JobDetailsState  @relation(fields: [jobDetailsId],references:  [id])
  jobDetailsId Int
  text String
  html String
}