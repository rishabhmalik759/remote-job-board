/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */







declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Company: { // root type
    companyName?: string | null; // String
    createdAt?: string | null; // String
    emailToCandidates?: boolean | null; // Boolean
    getMatches?: boolean | null; // Boolean
    highlightPost?: boolean | null; // Boolean
    id?: string | null; // ID
    invoiceDetails?: NexusGenRootTypes['InvoiceDetails'] | null; // InvoiceDetails
    jobDetails?: NexusGenRootTypes['JobDetails'] | null; // JobDetails
    jobLocation?: string | null; // String
    jobPostDuration?: number | null; // Int
    jobTags?: Array<string | null> | null; // [String]
    position?: string | null; // String
    positionType?: string | null; // String
    primaryTag?: string | null; // String
    showCompanyLogo?: boolean | null; // Boolean
    stickForDuration?: number | null; // Int
    updatedAt?: string | null; // String
  }
  HowToApply: { // root type
    companyId?: string | null; // String
    html?: string | null; // String
    jobDetails?: NexusGenRootTypes['JobDetails'] | null; // JobDetails
    text?: string | null; // String
  }
  InvoiceDetails: { // root type
    companies?: Array<NexusGenRootTypes['Company'] | null> | null; // [Company]
    companyId?: string | null; // String
    companyInvoiceEmail?: string | null; // String
    emailListToSendInvoice?: Array<string | null> | null; // [String]
    invoiceAddress?: string | null; // String
    invoiceNotesPurchaseOrder?: string | null; // String
    payLater?: boolean | null; // Boolean
  }
  JobDescription: { // root type
    companyId?: string | null; // String
    html?: string | null; // String
    jobDetails?: NexusGenRootTypes['JobDetails'] | null; // JobDetails
    text?: string | null; // String
  }
  JobDetails: { // root type
    applyEmail?: string | null; // String
    applyURL?: string | null; // String
    companies?: Array<NexusGenRootTypes['Company'] | null> | null; // [Company]
    companyId?: string | null; // String
    companyLogo?: string | null; // String
    highlightWithCompanyColor?: boolean | null; // Boolean
    howToApply?: NexusGenRootTypes['HowToApply'] | null; // HowToApply
    jobDescription?: NexusGenRootTypes['JobDescription'] | null; // JobDescription
    maxAnnualSalary?: number | null; // Int
    minAnnualSalary?: number | null; // Int
  }
  Mutation: {};
  Query: {};
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Company: { // field return type
    companyName: string | null; // String
    createdAt: string | null; // String
    emailToCandidates: boolean | null; // Boolean
    getMatches: boolean | null; // Boolean
    highlightPost: boolean | null; // Boolean
    id: string | null; // ID
    invoiceDetails: NexusGenRootTypes['InvoiceDetails'] | null; // InvoiceDetails
    jobDetails: NexusGenRootTypes['JobDetails'] | null; // JobDetails
    jobLocation: string | null; // String
    jobPostDuration: number | null; // Int
    jobTags: Array<string | null> | null; // [String]
    position: string | null; // String
    positionType: string | null; // String
    primaryTag: string | null; // String
    showCompanyLogo: boolean | null; // Boolean
    stickForDuration: number | null; // Int
    updatedAt: string | null; // String
  }
  HowToApply: { // field return type
    companyId: string | null; // String
    html: string | null; // String
    jobDetails: NexusGenRootTypes['JobDetails'] | null; // JobDetails
    text: string | null; // String
  }
  InvoiceDetails: { // field return type
    companies: Array<NexusGenRootTypes['Company'] | null> | null; // [Company]
    companyId: string | null; // String
    companyInvoiceEmail: string | null; // String
    emailListToSendInvoice: Array<string | null> | null; // [String]
    invoiceAddress: string | null; // String
    invoiceNotesPurchaseOrder: string | null; // String
    payLater: boolean | null; // Boolean
  }
  JobDescription: { // field return type
    companyId: string | null; // String
    html: string | null; // String
    jobDetails: NexusGenRootTypes['JobDetails'] | null; // JobDetails
    text: string | null; // String
  }
  JobDetails: { // field return type
    applyEmail: string | null; // String
    applyURL: string | null; // String
    companies: Array<NexusGenRootTypes['Company'] | null> | null; // [Company]
    companyId: string | null; // String
    companyLogo: string | null; // String
    highlightWithCompanyColor: boolean | null; // Boolean
    howToApply: NexusGenRootTypes['HowToApply'] | null; // HowToApply
    jobDescription: NexusGenRootTypes['JobDescription'] | null; // JobDescription
    maxAnnualSalary: number | null; // Int
    minAnnualSalary: number | null; // Int
  }
  Mutation: { // field return type
    createCompany: NexusGenRootTypes['Company'] | null; // Company
    deleteCompany: NexusGenRootTypes['Company'] | null; // Company
    editCompany: NexusGenRootTypes['Company'] | null; // Company
  }
  Query: { // field return type
    companies: Array<NexusGenRootTypes['Company'] | null>; // [Company]!
  }
}

export interface NexusGenFieldTypeNames {
  Company: { // field return type name
    companyName: 'String'
    createdAt: 'String'
    emailToCandidates: 'Boolean'
    getMatches: 'Boolean'
    highlightPost: 'Boolean'
    id: 'ID'
    invoiceDetails: 'InvoiceDetails'
    jobDetails: 'JobDetails'
    jobLocation: 'String'
    jobPostDuration: 'Int'
    jobTags: 'String'
    position: 'String'
    positionType: 'String'
    primaryTag: 'String'
    showCompanyLogo: 'Boolean'
    stickForDuration: 'Int'
    updatedAt: 'String'
  }
  HowToApply: { // field return type name
    companyId: 'String'
    html: 'String'
    jobDetails: 'JobDetails'
    text: 'String'
  }
  InvoiceDetails: { // field return type name
    companies: 'Company'
    companyId: 'String'
    companyInvoiceEmail: 'String'
    emailListToSendInvoice: 'String'
    invoiceAddress: 'String'
    invoiceNotesPurchaseOrder: 'String'
    payLater: 'Boolean'
  }
  JobDescription: { // field return type name
    companyId: 'String'
    html: 'String'
    jobDetails: 'JobDetails'
    text: 'String'
  }
  JobDetails: { // field return type name
    applyEmail: 'String'
    applyURL: 'String'
    companies: 'Company'
    companyId: 'String'
    companyLogo: 'String'
    highlightWithCompanyColor: 'Boolean'
    howToApply: 'HowToApply'
    jobDescription: 'JobDescription'
    maxAnnualSalary: 'Int'
    minAnnualSalary: 'Int'
  }
  Mutation: { // field return type name
    createCompany: 'Company'
    deleteCompany: 'Company'
    editCompany: 'Company'
  }
  Query: { // field return type name
    companies: 'Company'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    deleteCompany: { // args
      companyId: string; // String!
    }
    editCompany: { // args
      companyId: string; // String!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}